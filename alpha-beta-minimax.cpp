******带alpha—bata剪枝的极小极大算法******

1. alpha—bata剪枝算法的基本思想：识别出不利于玩家的结点，然后将他们从搜索树中除去。
   推：博弈树中被剪的分支所在的层越高，最小化博弈树的搜索范围的效果越明显。
   
2. 更进一步：
   在博弈树的深度优先搜索中，我们计算并维护alpha和beta两个变量。
   变量alpha定义了能够用来实现极大化目标的走棋方案，对于我们来说的最好走棋方案；
   变量beta定义了能够用来实现极小化目标的走棋方案， 对于对手来说的最好走棋方案。
   当搜索博弈树时，如果alpha总是大于等于beta， 则在这样的分支上对手的行棋方案会把我们推向不利的境地；
   此时，可以避免在这样的分支上进行更多的计算。
   如果正在评价走棋方案，并且发现一个走棋方案劣于当前已经发现的走棋方案，则可以忽略该走棋方案并继续搜索其他的方案。
   
3. 关键点：
   只需要维护alpha和beta两个变量并确定什么时候应该剪枝。
